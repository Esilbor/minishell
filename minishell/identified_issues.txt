make && valgrind --suppressions=suppressions.supp --leak-check=full --track-fds=yes --show-leak-kinds=all -s ./minishell

DENTITFIED ISSUES
- ret values of heredocs
- handle signals

Candy_$hell> cat | ls
art.txt                includes  minishell  src
exo.txt                libft     obj        suppressions.supp
identified_issues.txt  Makefile  readme

Candy_$hell?> echo $?
141

>> 141 ???


----

Candy_$hell> env | ls
art.txt                includes  minishell  src
exo.txt                libft     obj        suppressions.supp
identified_issues.txt  Makefile  readme
Candy_$hell?> echo $?
141

reponse ; ------------

Candy_$hell> cat | ls
art.txt  git_pull_clone.txt  identified_issues.txt  includes  libft  Makefile  minishell  obj  readme  src  suppressions.supp

Candy_$hell?> echo $?
141
Candy_$hell> 

Quand ls se termine, il ferme son pipe
Pendant ce temps cat attend la stdin
Et du coup quand cat veut ecrire dans le pipe et que le pipe est deja ferme Donc on a sigpipe = 141 // probleme de pipe

----

- review all error handling (properly cleanup if dup2 / pipe / strdup fail)

- export test="ls -l"
- export test2="ls          -l  -a" (might not be compulsory)

$> $dsfsd (wrong return value?)

- return values
- protect every ft_strdup
- check if no unclosed fd
- norm


****************************************************
****************************************************
****************************************************

would be nice to have it done:

- 2>b should redirect stderr to the file b (not done by most)
- update SHLVL (clearly optional if we want to flex)
- a no candy mode that cancel out colour display and get the prompt minimal $>
- have the nested shell prompt to display SHLVL with
                                                    *Candy_$hell> == SHLVL=3
                                                    **Candy_$hell> == SHLVL=4
                                                    ***Candy_$hell> == SHLVL=5
                                                    ****Candy_$hell> == SHLVL=6


*********
*********
*********
// rajouter un type SPACE
// nodes are merged when they shouldn't
Candy_$hell> export A="ls" B="-l" C="-a"

after clean_lexer
CMD[0] = [export__WORD__][A=__WMERGE][ls__DMERGE][B=__WMERGE][-l__DMERGE][C=__WMERGE][-a__WORD__]

after clean_lexer2
CMD[0] = [export__WORD__][A=__WMERGE][ls__DMERGE][B=__WMERGE][-l__DMERGE][C=__WMERGE][-a__WORD__]

after clean_lexer3
CMD[0] = [export__WORD__][A=__WMERGE][ls__DMERGE][B=__WMERGE][-l__DMERGE][C=__WMERGE][-a__WORD__]

after merge_nodes
CMD[0] = [export__WORD__][A=lsB=-lC=-a__WORD__]

after clean_lexer4
CMD[0] = [export__WORD__][A=lsB=-lC=-a__WORD__]

after clean_empty_nodes
CMD[0] = [export__WORD__][A=lsB=-lC=-a__WORD__]
Candy_$hell>

------

Candy_$hell> echo bon='jour' bon='nuit'

after clean_lexer
CMD[0] = [echo__WORD__][bon=__WMERGE][jour__SMERGE][bon=__WMERGE][nuit__WORD__]

after clean_lexer2
CMD[0] = [echo__WORD__][bon=__WMERGE][jour__SMERGE][bon=__WMERGE][nuit__WORD__]

after clean_lexer3
CMD[0] = [echo__WORD__][bon=__WMERGE][jour__SMERGE][bon=__WMERGE][nuit__WORD__]

after merge_nodes
CMD[0] = [echo__WORD__][bon=jourbon=nuit__WORD__]

after expand_cmds
CMD[0] = [echo__WORD__][bon=jourbon=nuit__WORD__]

after clean_lexer4
CMD[0] = [echo__WORD__][bon=jourbon=nuit__WORD__]

after clean_empty_nodes
CMD[0] = [echo__WORD__][bon=jourbon=nuit__WORD__]


------

le limiter
Candy_$hell> cat <<$LOL
cat: EOF: No such file or directory
1_Candy_$hell>

1_Candy_$hell> cat << $LOL
cat: EOF: No such file or directory
1_Candy_$hell>

>> Le limiter n'est pas reconnu LESS_LESS est bloque par un noeud vide

Candy_$hell> cat <<$LOL

after clean_lexer
CMD[0] = [cat__WORD__][<<__LESS_LESS][__WMERGE][EOF__EXPAND]

after clean_lexer2
CMD[0] = [cat__WORD__][<<__LESS_LESS][__WMERGE][EOF__EXPAND]

after clean_lexer3
CMD[0] = [cat__WORD__][__WMERGE][EOF__EXPAND]

after merge_nodes
CMD[0] = [cat__WORD__][EOF__EXPAND]

after clean_lexer4
CMD[0] = [cat__WORD__][EOF__WORD__]

after clean_empty_nodes
CMD[0] = [cat__WORD__][EOF__WORD__]
cat: EOF: No such file or directory
1_Candy_$hell>


----
!!!!!!!!!!!!!!!!!!!!!!!!!!!

Candy_$hell> <<EOF

!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Candy_$hell> <<lol | grep bon

!!!!!!!!!!!!!!!!!!!!!!!!!!!



Valeur de retour du heredoc pour les signaux

de base la valeur est a ?=0


---

Candy_$hell> <a
Candy_$hell> CTRL + D

LEAKS

------

quand une commande sans cmd les heredoc ne sont pas effaces






16 decembre:

*******************************
commande echo :

Candy_$hell>  echo qwe\n
qwe\n

bash : minishell$  echo qwe\n
qwen

********************************
Candy_$hell> echo yes\n
yes\n
Candy_$hell> echo "yes\n"
yesn
Candy_$hell> 

dans bash :

minishell$ echo yes\n
yesn
minishell$ echo "yes\n"
yes\n

*********************************

23 decembre

verifier si:
    --> free(cmd_tab[i]->heredoc_path); a ete fait? (voir  shell_parser) // pour tout free() dans cmd.c







commande env | ls 

bash : meme comportement que ds le minishell :  signal 13 (SIGPIPE)

zaquedev@paul-f3Br3s6:~/Projets_zo/MINISHELL/minishell/minishell$ valgrind -s --leak-check=full --show-leak-kinds=all --track-fds=yes env | ls
art.txt  git_pull_clone.txt  identified_issues.txt  includes  libft  Makefile  minishell  obj  readme  src  suppressions.supp
==197542== Memcheck, a memory error detector
==197542== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==197542== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==197542== Command: env
==197542== 
==197542== 
==197542== Process terminating with default action of signal 13 (SIGPIPE)
==197542==    at 0x4988697: write (write.c:26)
==197542==    by 0x48FEEEC: _IO_file_write@@GLIBC_2.2.5 (fileops.c:1180)
==197542==    by 0x49009E0: new_do_write (fileops.c:448)
==197542==    by 0x49009E0: _IO_new_do_write (fileops.c:425)
==197542==    by 0x49009E0: _IO_do_write@@GLIBC_2.2.5 (fileops.c:422)
==197542==    by 0x48FE4D7: _IO_file_sync@@GLIBC_2.2.5 (fileops.c:798)
==197542==    by 0x48F31A9: fflush (iofflush.c:40)
==197542==    by 0x10CBE8: ??? (in /usr/bin/env)
==197542==    by 0x10EE94: ??? (in /usr/bin/env)
==197542==    by 0x48B9494: __run_exit_handlers (exit.c:113)
==197542==    by 0x48B960F: exit (exit.c:143)
==197542==    by 0x489DD96: (below main) (libc_start_call_main.h:74)
==197542== 
==197542== FILE DESCRIPTORS: 3 open (3 std) at exit.
==197542== 
==197542== HEAP SUMMARY:
==197542==     in use at exit: 8,416 bytes in 31 blocks
==197542==   total heap usage: 32 allocs, 1 frees, 8,421 bytes allocated
==197542== 
==197542== 10 bytes in 1 blocks are still reachable in loss record 1 of 9
==197542==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==197542==    by 0x491C58E: strdup (strdup.c:42)
==197542==    by 0x48B1D57: __textdomain (textdomain.c:94)
==197542==    by 0x48B1D57: textdomain (textdomain.c:64)
==197542==    by 0x10A93F: ??? (in /usr/bin/env)
==197542==    by 0x489DD8F: (below main) (libc_start_call_main.h:58)
==197542== 
==197542== 12 bytes in 1 blocks are still reachable in loss record 2 of 9
==197542==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==197542==    by 0x491C58E: strdup (strdup.c:42)
==197542==    by 0x48AC31A: _nl_load_locale_from_archive (loadarchive.c:464)
==197542==    by 0x48AB0DF: _nl_find_locale (findlocale.c:152)
==197542==    by 0x48AA856: setlocale (setlocale.c:337)
==197542==    by 0x48AA856: setlocale (setlocale.c:217)
==197542==    by 0x10A928: ??? (in /usr/bin/env)
==197542==    by 0x489DD8F: (below main) (libc_start_call_main.h:58)
==197542== 
==197542== 12 bytes in 1 blocks are still reachable in loss record 3 of 9
==197542==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==197542==    by 0x48AA6EB: new_composite_name (setlocale.c:165)
==197542==    by 0x48AABAA: setlocale (setlocale.c:375)
==197542==    by 0x48AABAA: setlocale (setlocale.c:217)
==197542==    by 0x10A928: ??? (in /usr/bin/env)
==197542==    by 0x489DD8F: (below main) (libc_start_call_main.h:58)
==197542== 
==197542== 34 bytes in 1 blocks are still reachable in loss record 4 of 9
==197542==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==197542==    by 0x48AE5DE: set_binding_values.part.0 (bindtextdom.c:203)
==197542==    by 0x48AE89B: set_binding_values (bindtextdom.c:322)
==197542==    by 0x48AE89B: bindtextdomain (bindtextdom.c:320)
==197542==    by 0x10A937: ??? (in /usr/bin/env)
==197542==    by 0x489DD8F: (below main) (libc_start_call_main.h:58)
==197542== 
==197542== 120 bytes in 1 blocks are still reachable in loss record 5 of 9
==197542==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==197542==    by 0x48AC2FF: _nl_load_locale_from_archive (loadarchive.c:460)
==197542==    by 0x48AB0DF: _nl_find_locale (findlocale.c:152)
==197542==    by 0x48AA856: setlocale (setlocale.c:337)
==197542==    by 0x48AA856: setlocale (setlocale.c:217)
==197542==    by 0x10A928: ??? (in /usr/bin/env)
==197542==    by 0x489DD8F: (below main) (libc_start_call_main.h:58)
==197542== 
==197542== 144 bytes in 12 blocks are still reachable in loss record 6 of 9
==197542==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==197542==    by 0x491C58E: strdup (strdup.c:42)
==197542==    by 0x48AAC84: setlocale (setlocale.c:366)
==197542==    by 0x48AAC84: setlocale (setlocale.c:217)
==197542==    by 0x10A928: ??? (in /usr/bin/env)
==197542==    by 0x489DD8F: (below main) (libc_start_call_main.h:58)
==197542== 
==197542== 260 bytes in 1 blocks are still reachable in loss record 7 of 9
==197542==    at 0x484DA83: calloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==197542==    by 0x10A964: ??? (in /usr/bin/env)
==197542==    by 0x489DD8F: (below main) (libc_start_call_main.h:58)
==197542== 
==197542== 3,728 bytes in 12 blocks are still reachable in loss record 8 of 9
==197542==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==197542==    by 0x48AB96E: _nl_intern_locale_data (loadlocale.c:97)
==197542==    by 0x48AC370: _nl_load_locale_from_archive (loadarchive.c:477)
==197542==    by 0x48AB0DF: _nl_find_locale (findlocale.c:152)
==197542==    by 0x48AA856: setlocale (setlocale.c:337)
==197542==    by 0x48AA856: setlocale (setlocale.c:217)
==197542==    by 0x10A928: ??? (in /usr/bin/env)
==197542==    by 0x489DD8F: (below main) (libc_start_call_main.h:58)
==197542== 
==197542== 4,096 bytes in 1 blocks are still reachable in loss record 9 of 9
==197542==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==197542==    by 0x48F2BA3: _IO_file_doallocate (filedoalloc.c:101)
==197542==    by 0x4901CDF: _IO_doallocbuf (genops.c:347)
==197542==    by 0x4900F5F: _IO_file_overflow@@GLIBC_2.2.5 (fileops.c:744)
==197542==    by 0x48FF6D4: _IO_new_file_xsputn (fileops.c:1243)
==197542==    by 0x48FF6D4: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1196)
==197542==    by 0x48EB00B: outstring_func (vfprintf-internal.c:239)
==197542==    by 0x48EB00B: __vfprintf_internal (vfprintf-internal.c:1517)
==197542==    by 0x49A8A5A: __printf_chk (printf_chk.c:33)
==197542==    by 0x10B5A4: ??? (in /usr/bin/env)
==197542==    by 0x489DD8F: (below main) (libc_start_call_main.h:58)
==197542== 
==197542== LEAK SUMMARY:
==197542==    definitely lost: 0 bytes in 0 blocks
==197542==    indirectly lost: 0 bytes in 0 blocks
==197542==      possibly lost: 0 bytes in 0 blocks
==197542==    still reachable: 8,416 bytes in 31 blocks
==197542==         suppressed: 0 bytes in 0 blocks
==197542== 
==197542== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
zaquedev@paul-f3Br3s6:~/Projets_zo/MINISHELL/minishell/minishell


