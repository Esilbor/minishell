make && valgrind --suppressions=suppressions.supp --leak-check=full --track-fds=yes --show-leak-kinds=all -s ./minishell

DENTITFIED ISSUES
- ret values of heredocs
- handle signals

Candy_$hell> cat | ls
art.txt                includes  minishell  src
exo.txt                libft     obj        suppressions.supp
identified_issues.txt  Makefile  readme

Candy_$hell?> echo $?
141

>> 141 ???


----

Candy_$hell> env | ls
art.txt                includes  minishell  src
exo.txt                libft     obj        suppressions.supp
identified_issues.txt  Makefile  readme
Candy_$hell?> echo $?
141

reponse ; ------------

Candy_$hell> cat | ls
art.txt  git_pull_clone.txt  identified_issues.txt  includes  libft  Makefile  minishell  obj  readme  src  suppressions.supp

Candy_$hell?> echo $?
141
Candy_$hell> 

Quand ls se termine, il ferme son pipe
Pendant ce temps cat attend la stdin
Et du coup quand cat veut ecrire dans le pipe et que le pipe est deja ferme Donc on a sigpipe = 141 // probleme de pipe

----

- review all error handling (properly cleanup if dup2 / pipe / strdup fail)

- export test="ls -l"
- export test2="ls          -l  -a" (might not be compulsory)

$> $dsfsd (wrong return value?)

- return values
- protect every ft_strdup
- check if no unclosed fd
- norm


****************************************************
****************************************************
****************************************************

would be nice to have it done:

- 2>b should redirect stderr to the file b (not done by most)
- update SHLVL (clearly optional if we want to flex)
- a no candy mode that cancel out colour display and get the prompt minimal $>
- have the nested shell prompt to display SHLVL with
                                                    *Candy_$hell> == SHLVL=3
                                                    **Candy_$hell> == SHLVL=4
                                                    ***Candy_$hell> == SHLVL=5
                                                    ****Candy_$hell> == SHLVL=6


*********
*********
*********
// rajouter un type SPACE
// nodes are merged when they shouldn't
Candy_$hell> export A="ls" B="-l" C="-a"

after clean_lexer
CMD[0] = [export__WORD__][A=__WMERGE][ls__DMERGE][B=__WMERGE][-l__DMERGE][C=__WMERGE][-a__WORD__]

after clean_lexer2
CMD[0] = [export__WORD__][A=__WMERGE][ls__DMERGE][B=__WMERGE][-l__DMERGE][C=__WMERGE][-a__WORD__]

after clean_lexer3
CMD[0] = [export__WORD__][A=__WMERGE][ls__DMERGE][B=__WMERGE][-l__DMERGE][C=__WMERGE][-a__WORD__]

after merge_nodes
CMD[0] = [export__WORD__][A=lsB=-lC=-a__WORD__]

after clean_lexer4
CMD[0] = [export__WORD__][A=lsB=-lC=-a__WORD__]

after clean_empty_nodes
CMD[0] = [export__WORD__][A=lsB=-lC=-a__WORD__]
Candy_$hell>

------

Candy_$hell> echo bon='jour' bon='nuit'

after clean_lexer
CMD[0] = [echo__WORD__][bon=__WMERGE][jour__SMERGE][bon=__WMERGE][nuit__WORD__]

after clean_lexer2
CMD[0] = [echo__WORD__][bon=__WMERGE][jour__SMERGE][bon=__WMERGE][nuit__WORD__]

after clean_lexer3
CMD[0] = [echo__WORD__][bon=__WMERGE][jour__SMERGE][bon=__WMERGE][nuit__WORD__]

after merge_nodes
CMD[0] = [echo__WORD__][bon=jourbon=nuit__WORD__]

after expand_cmds
CMD[0] = [echo__WORD__][bon=jourbon=nuit__WORD__]

after clean_lexer4
CMD[0] = [echo__WORD__][bon=jourbon=nuit__WORD__]

after clean_empty_nodes
CMD[0] = [echo__WORD__][bon=jourbon=nuit__WORD__]


------

le limiter
Candy_$hell> cat <<$LOL
cat: EOF: No such file or directory
1_Candy_$hell>

1_Candy_$hell> cat << $LOL
cat: EOF: No such file or directory
1_Candy_$hell>

>> Le limiter n'est pas reconnu LESS_LESS est bloque par un noeud vide

Candy_$hell> cat <<$LOL

after clean_lexer
CMD[0] = [cat__WORD__][<<__LESS_LESS][__WMERGE][EOF__EXPAND]

after clean_lexer2
CMD[0] = [cat__WORD__][<<__LESS_LESS][__WMERGE][EOF__EXPAND]

after clean_lexer3
CMD[0] = [cat__WORD__][__WMERGE][EOF__EXPAND]

after merge_nodes
CMD[0] = [cat__WORD__][EOF__EXPAND]

after clean_lexer4
CMD[0] = [cat__WORD__][EOF__WORD__]

after clean_empty_nodes
CMD[0] = [cat__WORD__][EOF__WORD__]
cat: EOF: No such file or directory
1_Candy_$hell>


----
!!!!!!!!!!!!!!!!!!!!!!!!!!!

Candy_$hell> <<EOF

!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Candy_$hell> <<lol | grep bon

!!!!!!!!!!!!!!!!!!!!!!!!!!!



Valeur de retour du heredoc pour les signaux

de base la valeur est a ?=0


---

Candy_$hell> <a
Candy_$hell> CTRL + D

LEAKS

------

quand une commande sans cmd les heredoc ne sont pas effaces





16 decembre:

*******************************
commande echo :

Candy_$hell>  echo qwe\n
qwe\n

bash : minishell$  echo qwe\n
qwen

********************************
Candy_$hell> echo yes\n
yes\n
Candy_$hell> echo "yes\n"
yesn
Candy_$hell> 

dans bash :

minishell$ echo yes\n
yesn
minishell$ echo "yes\n"
yes\n

*********************************

23 decembre

verifier si:
    --> free(cmd_tab[i]->heredoc_path); a ete fait? (voir  shell_parser) // pour tout free() dans cmd.c



********************************************************************************************************
Candy_$hell> unset PWD  ---- > regle --> modifications faites --> ok?

******************

➜  minishell git:(zora-branch) ✗ valgrind ./minishell
==323925== Memcheck, a memory error detector
==323925== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==323925== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==323925== Command: ./minishell
==323925== 
Candy_$hell> cd src
Candy_$hell> unset PWD
Candy_$hell> cd ..
==323925== Invalid read of size 8
==323925==    at 0x401474: update_pwd (cd_builtin.c:24)
==323925==    by 0x4013B1: do_cd (cd_builtin.c:47)
==323925==    by 0x401BB3: do_builtins (do_builtins.c:61)
==323925==    by 0x404465: ft_pipex (pipex.c:238)
==323925==    by 0x408B66: execution (main.c:52)
==323925==    by 0x408D6F: shell_loop (main.c:122)
==323925==    by 0x408E56: main (main.c:150)
==323925==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==323925== 
==323925== 

==323925== 
==323925== For lists of detected and suppressed errors, rerun with: -s
==323925== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
[1]    323925 segmentation fault (core dumped)  valgrind ./minishell
➜  minishell git:(zora-branch) ✗ valgrind ./minishell


**************************

Candy_$hell> cd src
Candy_$hell> unset OLDPWD
Candy_$hell> cd ..
==324028== Invalid read of size 8
....
==324028==    indirectly lost: 0 bytes in 0 blocks
==324028==      possibly lost: 0 bytes in 0 blocks
==324028==    still reachable: 223,447 bytes in 444 blocks
==324028==         suppressed: 0 bytes in 0 blocks
==324028== Rerun with --leak-check=full to see details of leaked memory
==324028== 
==324028== For lists of detected and suppressed errors, rerun with: -s
==324028== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
[1]    324028 segmentation fault (core dumped)  valgrind ./minishell
➜  minishell git:(zora-branch) ✗ 

*******************
**********************************************************************************************************





 Le builtin " export" ============> a regler 


commande "export" ???


Candy_$hell> export cmd="ls -l"
Candy_$hell> $cmd
ls -l: cmd_path not found


[1]    324028 segmentation fault (core dumped)  valgrind ./minishell




******************************************************************************

Pour  cd : pour retrouver un path

-> ne renvoie pas le meme path


bash :

zaquedev@paul-f3Br3s6:~$ cd ~/Projets_zo/MINISHELL/minishell/minishell
zaquedev@paul-f3Br3s6:~/Projets_zo/MINISHELL/minishell/minishell$ pwd
/mnt/nfs/homes/zaquedev/Projets_zo/MINISHELL/minishell/minishell
zaquedev@paul-f3Br3s6:~/Projets_zo/MINISHELL/minishell/minishell$ 


minishell: 

PATH (tests): Nok ?  cd ~/Projets_zo/MINISHELL/minishell/minishell


Candy_$hell> cd ~
Candy_$hell> cd ~/Projets_zo/MINISHELL/minishell/minishell
Candy_$hell> pwd
/mnt/nfs/homes/zaquedev
Candy_$hell> cd Projets_zo/MINISHELL/minishell/minishell
Candy_$hell> pwd
/mnt/nfs/homes/zaquedev/Projets_zo/MINISHELL/minishell/minishell


PATH (tests): ok ? cd Projets_zo/MINISHELL/minishell/minishell

Candy_$hell> cd src
Candy_$hell> ls
==460714== Memcheck, a memory error detector
==460714== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==460714== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==460714== Command: /usr/bin/ls
==460714== 
built-in  env  exec  main.c  parsing

Candy_$hell> pwd
/mnt/nfs/homes/zaquedev/Projets_zo/MINISHELL/minishell/minishell/src
Candy_$hell> cd built-in/
Candy_$hell> pwd
/mnt/nfs/homes/zaquedev/Projets_zo/MINISHELL/minishell/minishell/src/built-in
Candy_$hell> cd ~
Candy_$hell> pwd
/mnt/nfs/homes/zaquedev
Candy_$hell> cd Projets_zo/MINISHELL/minishell/minishell/src/built-in
Candy_$hell> pwd
/mnt/nfs/homes/zaquedev/Projets_zo/MINISHELL/minishell/minishell/src/built-in


